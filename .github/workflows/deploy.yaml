name: Deploy Model and Flask App

on:
  workflow_dispatch:  # Trigger pipeline manually

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Set up in GitHub Secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Set up in GitHub Secrets


    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt


    - name: Train model
      run: |
        python model.py

    - name: Build model API Docker image
      run: |
        docker build -f Dockerfile.model-api -t ${{ secrets.DOCKER_USERNAME }}/model-api:latest .

    - name: Build Flask app Docker image
      run: |
        docker build -f Dockerfile.flask-app -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .

    - name: Push Docker images to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/model-api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

    - name: Deploy using Docker Compose
      run: |
        docker-compose up -d

    # - name: Test Flask app deployment
    #   run: |
    #     curl -X POST -H "Content-Type: application/json" -d '{"features": [1800, 3, 15]}' http://localhost:5000/predict
    #     # You can add more tests to ensure the model is working as expected

    # - name: Clean up Docker containers
    #   run: |
    #     docker-compose down
